#!/bin/bash

# PNG Green Fees - Deploy with Password Authentication
# Simple deployment script that prompts for VPS password

set -e

VPS_USER="root"
VPS_HOST="195.200.14.62"
VPS_APP_DIR="/var/www/png-green-fees"

echo "üöÄ PNG Green Fees - Deploy to VPS"
echo "================================="
echo ""

# Check if required files exist
echo "üìã Checking files..."
if [ ! -d "dist" ]; then
    echo "‚ùå dist/ folder not found. Run 'npm run build' first."
    exit 1
fi

if [ ! -f ".env.production" ]; then
    echo "‚ùå .env.production not found. Please create it first."
    exit 1
fi

echo "‚úÖ Files found"
echo ""

# Get VPS password from user
echo "üîê VPS Authentication"
echo "====================="
echo "VPS: $VPS_USER@$VPS_HOST"
echo "You will be prompted for the VPS password multiple times during deployment."
echo ""

read -p "Press Enter to continue..." -r
echo ""

# Test SSH connection
echo "üîó Testing SSH connection..."
ssh -o ConnectTimeout=10 -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST exit
echo "‚úÖ SSH connection successful"
echo ""

# Create application directory
echo "üìÅ Creating application directory..."
ssh -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST "mkdir -p $VPS_APP_DIR"
echo "‚úÖ Directory created"
echo ""

# Backup existing deployment
echo "üíæ Creating backup..."
ssh -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST "
    if [ -d '$VPS_APP_DIR/dist' ]; then
        mv '$VPS_APP_DIR/dist' '$VPS_APP_DIR/dist.backup.\$(date +%Y%m%d-%H%M%S)' 2>/dev/null || true
        echo 'Backup created'
    else
        echo 'No existing deployment to backup'
    fi
"
echo "‚úÖ Backup completed"
echo ""

# Copy application files
echo "üì§ Copying application files..."
echo "This may take a few minutes..."
rsync -avz --progress --delete dist/ $VPS_USER@$VPS_HOST:$VPS_APP_DIR/dist/
echo "‚úÖ Application files copied"
echo ""

# Copy environment file
echo "‚öôÔ∏è  Copying environment variables..."
scp .env.production $VPS_USER@$VPS_HOST:$VPS_APP_DIR/.env.production
echo "‚úÖ Environment variables copied"
echo ""

# Copy Nginx configuration
echo "üîß Copying Nginx configuration..."
scp nginx-config.conf $VPS_USER@$VPS_HOST:/tmp/png-green-fees-nginx.conf
echo "‚úÖ Nginx configuration copied"
echo ""

# Set permissions
echo "üîß Setting file permissions..."
ssh -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST "
    chown -R www-data:www-data $VPS_APP_DIR
    chmod -R 755 $VPS_APP_DIR
    chmod 600 $VPS_APP_DIR/.env.production
"
echo "‚úÖ Permissions set"
echo ""

# Update Nginx configuration
echo "üîß Updating Nginx configuration..."
ssh -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST "
    cp /tmp/png-green-fees-nginx.conf /etc/nginx/sites-available/png-green-fees
    nginx -t && systemctl reload nginx
"
echo "‚úÖ Nginx configuration updated"
echo ""

# Restart Nginx
echo "üîÑ Restarting Nginx..."
ssh -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST "systemctl restart nginx"
echo "‚úÖ Nginx restarted"
echo ""

# Test deployment
echo "üß™ Testing deployment..."
if ssh -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST "systemctl status nginx --no-pager -l" | grep -q "active (running)"; then
    echo "‚úÖ Nginx is running"
else
    echo "‚ö†Ô∏è  Nginx status unclear"
fi

# Count deployed files
FILE_COUNT=$(ssh -o PasswordAuthentication=yes $VPS_USER@$VPS_HOST "find $VPS_APP_DIR/dist -type f | wc -l")
echo "‚úÖ Deployed $FILE_COUNT files"

# Test application
echo "üåê Testing application..."
if curl -s -o /dev/null -w "%{http_code}" https://eywademo.cloud | grep -q "200"; then
    echo "‚úÖ Application is responding"
else
    echo "‚ö†Ô∏è  Application may not be responding"
fi

echo ""
echo "üéâ DEPLOYMENT COMPLETED!"
echo "========================"
echo ""
echo "üåê Application URLs:"
echo "   ‚Ä¢ https://eywademo.cloud"
echo "   ‚Ä¢ https://www.eywademo.cloud"
echo ""
echo "üîê Login Credentials:"
echo "   ‚Ä¢ Email: admin@example.com"
echo "   ‚Ä¢ Password: password123"
echo ""
echo "üß™ Next Steps:"
echo "   1. Open https://eywademo.cloud in a new incognito window"
echo "   2. Login with admin@example.com / password123"
echo "   3. Verify no blank screen appears"
echo "   4. Test all features"
echo ""
echo "üîß If you need to troubleshoot:"
echo "   ‚Ä¢ SSH: ssh $VPS_USER@$VPS_HOST"
echo "   ‚Ä¢ Check logs: tail -f /var/log/nginx/error.log"
echo "   ‚Ä¢ Check files: ls -la $VPS_APP_DIR/dist/"
echo ""
echo "‚úÖ The blank screen issue should now be resolved!"
